╔═══════════════════════════════════════════════════════════════════════════╗
║                      🔥 حل مشكلة CORS - الدليل الشامل                    ║
║                    CORS Solution - Complete Guide                         ║
╚═══════════════════════════════════════════════════════════════════════════╝

📌 ملخص المشكلة:
---------------
تطبيق React المنشور على https://woo-silk.vercel.app لا يستطيع الوصول إلى
API على https://dev.murjan.sa بسبب مشكلة CORS (Cross-Origin Resource Sharing)

الخطأ:
Access to XMLHttpRequest at 'https://dev.murjan.sa/wp-json/murjan-api/v1/products'
from origin 'https://woo-silk.vercel.app' has been blocked by CORS policy


╔═══════════════════════════════════════════════════════════════════════════╗
║                           ✅ الحلول المطبقة                               ║
╚═══════════════════════════════════════════════════════════════════════════╝

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1️⃣ حل جانب السيرفر (Backend) - الأهم ⭐
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🔧 الخطوة 1: رفع ملف .htaccess
--------------------------------
✅ تم إنشاء الملف: api/.htaccess

📥 تعليمات الرفع:
1. افتح cPanel أو FTP الخاص بموقع dev.murjan.sa
2. انتقل إلى المجلد الجذر للموقع (public_html أو www)
3. ارفع ملف .htaccess من مجلد api/
4. إذا كان هناك ملف .htaccess موجود بالفعل، أضف المحتوى الجديد في نهايته

⚠️ مهم جداً:
- تأكد من أن mod_headers و mod_rewrite مُفعّلة في Apache
- في cPanel: Software → Select PHP Version → Extensions → تحقق من mod_headers

🔧 الخطوة 2: التحقق من ملف cors-headers.php
----------------------------------------------
✅ الملف موجود في: api/cors-headers.php
✅ يحتوي على نطاق https://woo-silk.vercel.app في القائمة البيضاء

📝 تحقق من:
1. الملف موجود في مجلد api/
2. تم تضمينه في woo-products-api.php (السطر 43-45)
3. النطاق https://woo-silk.vercel.app موجود في $allowed_origins


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
2️⃣ حل جانب التطبيق (Frontend)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🔧 الخطوة 1: إنشاء ملف .env
-----------------------------
✅ تم إنشاء ملف env-template.txt

📝 خطوات التنفيذ:
1. افتح مجلد woo-product-manager-main
2. أنشئ ملف جديد باسم: .env (بالضبط، بدون أي امتداد)
3. انسخ المحتوى من env-template.txt
4. الصق في ملف .env

محتوى .env:
-----------
VITE_WOOCOMMERCE_API_URL=https://dev.murjan.sa/wp-json/murjan-api/v1
VITE_WOOCOMMERCE_CONSUMER_KEY=ck_2210fb8d333da5da151029715a85618a4b283a52
VITE_WOOCOMMERCE_CONSUMER_SECRET=cs_7f1073e18d0af70d01c84692ce8c04609a722b5c

⚠️ تحذير أمني:
- لا تشارك هذا الملف مع أحد
- لا ترفعه على GitHub (تم إضافته إلى .gitignore)
- استخدم متغيرات Vercel Environment Variables للنشر


🔧 الخطوة 2: تحديث متغيرات Vercel
-----------------------------------
📍 انتقل إلى: https://vercel.com/dashboard
1. اختر مشروع woo-silk
2. اذهب إلى Settings → Environment Variables
3. أضف المتغيرات التالية:

┌─────────────────────────────────────────────────────────────┐
│ Name                              │ Value                   │
├─────────────────────────────────────────────────────────────┤
│ VITE_WOOCOMMERCE_API_URL          │ https://dev.murjan...   │
│ VITE_WOOCOMMERCE_CONSUMER_KEY     │ ck_2210fb8d333da...    │
│ VITE_WOOCOMMERCE_CONSUMER_SECRET  │ cs_7f1073e18d0a...     │
└─────────────────────────────────────────────────────────────┘

4. احفظ التغييرات
5. أعد نشر التطبيق (Redeploy)


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
3️⃣ التحسينات الإضافية
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ إصلاح مشكلة الإحصائيات
--------------------------
- تم تحديث src/services/api.ts
- الآن يجلب كل المنتجات (حتى 500 منتج) لحساب الإحصائيات الدقيقة
- لن تختفي الإحصائيات بعد Refresh

✅ تحديث vercel.json
--------------------
- تم إضافة رؤوس CORS الصحيحة
- تم إضافة رؤوس الأمان (Security Headers)

✅ تحديث api.ts
---------------
- إزالة الـ proxy في development
- استخدام الاتصال المباشر مع API
- إضافة console logs للتتبع


╔═══════════════════════════════════════════════════════════════════════════╗
║                        🚀 خطوات التشغيل والنشر                           ║
╚═══════════════════════════════════════════════════════════════════════════╝

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
للتطوير المحلي (Local Development):
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. تأكد من إنشاء ملف .env (اتبع الخطوات أعلاه)

2. ثبت المكتبات:
   cd woo-product-manager-main
   npm install

3. شغل التطبيق:
   npm run dev

4. افتح المتصفح:
   http://localhost:8080


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
للنشر على Vercel:
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. تأكد من إضافة المتغيرات في Vercel (كما في الخطوة 2 أعلاه)

2. في Terminal:
   cd woo-product-manager-main
   git add .
   git commit -m "Fix CORS and add environment variables"
   git push

3. Vercel سيقوم بالنشر التلقائي

أو يدوياً:
   npm run build
   vercel --prod


╔═══════════════════════════════════════════════════════════════════════════╗
║                          🔍 التحقق من الحل                                ║
╚═══════════════════════════════════════════════════════════════════════════╝

□ 1. تحقق من رفع .htaccess على السيرفر
□ 2. تحقق من وجود cors-headers.php في مجلد api/
□ 3. تحقق من إنشاء ملف .env في woo-product-manager-main/
□ 4. تحقق من إضافة المتغيرات في Vercel
□ 5. أعد نشر التطبيق على Vercel
□ 6. افتح Console في المتصفح وتحقق من عدم وجود أخطاء CORS


╔═══════════════════════════════════════════════════════════════════════════╗
║                          🐛 استكشاف الأخطاء                               ║
╚═══════════════════════════════════════════════════════════════════════════╝

❌ المشكلة: لا يزال خطأ CORS موجوداً
✅ الحل:
   1. تحقق من رفع .htaccess على السيرفر الصحيح
   2. تأكد من أن mod_headers مُفعّل في Apache
   3. جرب مسح الكاش في المتصفح (Ctrl+Shift+Delete)
   4. تحقق من console في المتصفح لمزيد من التفاصيل

❌ المشكلة: خطأ 401 Unauthorized
✅ الحل:
   1. تحقق من صحة Consumer Key و Secret
   2. تأكد من أن المفاتيح لها صلاحيات Read/Write
   3. راجع ملف .env والمتغيرات في Vercel

❌ المشكلة: الإحصائيات لا تظهر
✅ الحل:
   1. افتح Console في المتصفح
   2. ابحث عن رسالة "📊 Stats calculated from products"
   3. تحقق من وجود منتجات في المتجر
   4. أعد تحميل الصفحة (F5)

❌ المشكلة: الصور لا تُرفع
✅ الحل:
   1. تحقق من صلاحيات مجلد wp-content/uploads
   2. تأكد من أن حجم الصورة أقل من الحد المسموح
   3. تحقق من إعدادات PHP (upload_max_filesize)


╔═══════════════════════════════════════════════════════════════════════════╗
║                         📞 الدعم والمساعدة                                ║
╚═══════════════════════════════════════════════════════════════════════════╝

إذا واجهت أي مشكلة:
1. تحقق من Console في المتصفح (F12)
2. راجع سجلات الخادم (Server Logs)
3. تأكد من تطبيق جميع الخطوات أعلاه

ملفات مهمة للمراجعة:
- woo-product-manager-main/src/services/api.ts
- woo-product-manager-main/vercel.json
- api/cors-headers.php
- api/.htaccess


╔═══════════════════════════════════════════════════════════════════════════╗
║                            ✨ ملاحظات أخيرة                               ║
╚═══════════════════════════════════════════════════════════════════════════╝

🔐 الأمان:
- لا تشارك مفاتيح API أبداً
- استخدم HTTPS دائماً في الإنتاج
- راجع صلاحيات المفاتيح بانتظام

⚡ الأداء:
- الإحصائيات تُحسب من أول 500 منتج
- استخدم Pagination في عرض المنتجات
- فعّل Caching في السيرفر

🎯 التطوير:
- الكود منظم ومُعلّق جيداً
- سهولة إضافة ميزات جديدة
- دعم كامل للمنتجات الفيزيائية والمتغيرة


═══════════════════════════════════════════════════════════════════════════
                     🎉 تم تطبيق جميع الحلول بنجاح!
═══════════════════════════════════════════════════════════════════════════

تاريخ التحديث: 2025-10-27
الإصدار: 1.0.0

