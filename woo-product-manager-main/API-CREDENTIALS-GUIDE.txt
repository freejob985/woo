╔══════════════════════════════════════════════════════════════════════════════╗
║                   🔐 دليل بيانات الاعتماد - API Credentials Guide           ║
║                      WooCommerce Products Manager                            ║
╚══════════════════════════════════════════════════════════════════════════════╝

┌──────────────────────────────────────────────────────────────────────────────┐
│  ✅ البيانات المُعدة حالياً / Current Configuration                          │
└──────────────────────────────────────────────────────────────────────────────┘

📌 API Base URL:
   https://dev.murjan.sa/wp-json/murjan-api/v1

📌 Consumer Key:
   ck_2210fb8d333da5da151029715a85618a4b283a52

📌 Consumer Secret:
   cs_7f1073e18d0af70d01c84692ce8c04609a722b5c

🎯 هذه البيانات مُثبتة الآن في ملف .env وستعمل تلقائياً

┌──────────────────────────────────────────────────────────────────────────────┐
│  📁 موقع البيانات / Credentials Location                                     │
└──────────────────────────────────────────────────────────────────────────────┘

✅ ملف .env (للتطوير المحلي):
   📂 woo-product-manager-main/.env
   ✓ تم إنشاؤه تلقائياً
   ✓ يحتوي على البيانات الصحيحة
   ✓ محمي من Git (موجود في .gitignore)

✅ ملف env.example (للمرجع):
   📂 woo-product-manager-main/env.example
   ✓ يحتوي على أمثلة للبيانات
   ✓ يمكن مشاركته في Git

┌──────────────────────────────────────────────────────────────────────────────┐
│  🚀 كيفية الاستخدام / How to Use                                             │
└──────────────────────────────────────────────────────────────────────────────┘

1️⃣ تشغيل التطبيق محلياً (Local Development):
   
   cd woo-product-manager-main
   npm install
   npm run dev
   
   ✅ سيقرأ البيانات من ملف .env تلقائياً

═══════════════════════════════════════════════════════════════════════════════

2️⃣ النشر على Vercel:
   
   أ. اذهب إلى Vercel Dashboard
   ب. اختر مشروعك > Settings > Environment Variables
   ج. أضف المتغيرات التالية:
   
   Name: VITE_WOOCOMMERCE_API_URL
   Value: https://dev.murjan.sa/wp-json/murjan-api/v1
   
   Name: VITE_WOOCOMMERCE_CONSUMER_KEY
   Value: ck_2210fb8d333da5da151029715a85618a4b283a52
   
   Name: VITE_WOOCOMMERCE_CONSUMER_SECRET
   Value: cs_7f1073e18d0af70d01c84692ce8c04609a722b5c
   
   Name: VITE_ITEMS_PER_PAGE
   Value: 12
   
   د. احفظ وأعد النشر (Redeploy)

═══════════════════════════════════════════════════════════════════════════════

3️⃣ النشر على Netlify:
   
   أ. اذهب إلى Netlify Dashboard
   ب. اختر مشروعك > Site settings > Environment variables
   ج. أضف نفس المتغيرات كما في Vercel
   د. احفظ وأعد النشر

┌──────────────────────────────────────────────────────────────────────────────┐
│  🔒 ملاحظات الأمان / Security Notes                                          │
└──────────────────────────────────────────────────────────────────────────────┘

⚠️ مهم جداً:

1. ✅ ملف .env محمي في .gitignore
   • لن يتم رفعه إلى Git/GitHub
   • يحتوي على بيانات حساسة
   • يُستخدم فقط في التطوير المحلي

2. ⚠️ لا تشارك هذه البيانات علناً
   • Consumer Key & Secret حساسة
   • يمكن استخدامها للوصول إلى متجرك
   • احفظها في مكان آمن

3. 🔐 في الإنتاج (Production):
   • استخدم Environment Variables
   • لا تضع البيانات مباشرة في الكود
   • استخدم HTTPS دائماً

4. 🔄 تجديد المفاتيح:
   • إذا تم تسريب المفاتيح، أنشئ مفاتيح جديدة
   • WooCommerce > Settings > Advanced > REST API
   • احذف المفاتيح القديمة

┌──────────────────────────────────────────────────────────────────────────────┐
│  🧪 اختبار الاتصال / Test Connection                                         │
└──────────────────────────────────────────────────────────────────────────────┘

بعد تشغيل التطبيق، افتح Developer Console (F12) وانسخ:

fetch('https://dev.murjan.sa/wp-json/murjan-api/v1/products?per_page=1', {
  headers: {
    'Authorization': 'Basic ' + btoa('ck_2210fb8d333da5da151029715a85618a4b283a52:cs_7f1073e18d0af70d01c84692ce8c04609a722b5c')
  }
})
.then(r => r.json())
.then(data => {
  console.log('✅ Connection Successful!');
  console.log('Products:', data);
})
.catch(err => {
  console.error('❌ Connection Failed:', err);
});

النتيجة المتوقعة:
✅ "Connection Successful!" مع بيانات المنتجات

┌──────────────────────────────────────────────────────────────────────────────┐
│  📊 حالة التكوين / Configuration Status                                      │
└──────────────────────────────────────────────────────────────────────────────┘

✅ Backend (WordPress API):
   • Plugin مُفعّل: woo-products-api
   • CORS مُفعّل: cors-headers.php
   • النطاق مسموح به: https://woo-silk.vercel.app
   • API Endpoint: https://dev.murjan.sa/wp-json/murjan-api/v1

✅ Frontend (React App):
   • ملف .env: تم إنشاؤه ✓
   • Consumer Key: مضاف ✓
   • Consumer Secret: مضاف ✓
   • API URL: مضاف ✓
   • CORS Config: جاهز ✓

✅ Deployment (Vercel/Netlify):
   • vercel.json: جاهز ✓
   • _headers: جاهز ✓
   • Environment Variables: يجب إضافتها يدوياً

┌──────────────────────────────────────────────────────────────────────────────┐
│  🔧 استكشاف الأخطاء / Troubleshooting                                        │
└──────────────────────────────────────────────────────────────────────────────┘

❌ إذا ظهر خطأ "401 Unauthorized":
   • تحقق من Consumer Key & Secret
   • تأكد من صلاحيات Read/Write في WooCommerce
   • راجع أن المفاتيح صحيحة (بدون مسافات إضافية)

❌ إذا ظهر خطأ CORS:
   • راجع ملف api/cors-headers.php
   • تأكد من إضافة نطاقك في allowed_origins
   • أعد تشغيل الخادم

❌ إذا لم تظهر المنتجات:
   • تحقق من وجود منتجات في WooCommerce
   • راجع Console للأخطاء
   • اختبر الاتصال بالكود أعلاه

┌──────────────────────────────────────────────────────────────────────────────┐
│  📞 الدعم / Support                                                           │
└──────────────────────────────────────────────────────────────────────────────┘

للمساعدة:
1. راجع CORS-SETUP-COMPLETE.txt للتعليمات الكاملة
2. افتح setup-cors-guide.php في المتصفح
3. تحقق من سجلات الأخطاء في Console

╔══════════════════════════════════════════════════════════════════════════════╗
║                    ✅ البيانات جاهزة وثابتة في الاتصال!                     ║
║                  Credentials are ready and fixed in connection!              ║
║                                                                              ║
║  يمكنك الآن تشغيل التطبيق بـ: npm run dev                                   ║
║  You can now run the app with: npm run dev                                  ║
╚══════════════════════════════════════════════════════════════════════════════╝

